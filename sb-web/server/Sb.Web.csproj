<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>net5.0</TargetFramework>
  </PropertyGroup>

  <PropertyGroup>
    <RestorePackagesWithLockFile>true</RestorePackagesWithLockFile>
  </PropertyGroup>

  <!--
      1. Install npm packages
      "Inputs" and "Outputs" are used for incremental builds. If all output items are up-to-date, MSBuild skips the target.
      The first time the task is executed. Then, it only runs when you change the package.json file.
      Documentation: https://docs.microsoft.com/en-us/visualstudio/msbuild/incremental-builds?WT.mc_id=DT-MVP-5003978
   -->
  <Target Name="NpmInstall" Inputs="../client/package.json" Outputs="../client/node_modules/.install-stamp">
    <!--
        Use npm install or npm ci depending on RestorePackagesWithLockFile value.
     -->
    <Exec WorkingDirectory="../client" Command="npm ci" Condition="$(RestorePackagesWithLockFile) == 'true'" />
    <Exec WorkingDirectory="../client" Command="npm install" Condition="$(RestorePackagesWithLockFile) != 'true'" />

    <!-- Write the stamp file, so incremental builds work -->
    <Touch Files="../client/node_modules/.install-stamp" AlwaysCreate="true" />
  </Target>

  <!--
      2. Run npm run build before building the .NET project.
      MSBuild runs NpmInstall before this task because of the DependsOnTargets attribute.
   -->
  <Target Name="NpmRunBuild" DependsOnTargets="NpmInstall" BeforeTargets="BeforeBuild">
    <Exec WorkingDirectory="../client" Command="npm run build" />
  </Target>
  
  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.10" />
  </ItemGroup>
  
  <ItemGroup>
    <Folder Include="Controllers\" />
  </ItemGroup>

</Project>
